upstream wordpress {
  server blog:9000;
}

fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=BLOG:100m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
fastcgi_hide_header X-Powered-By;

server {
  listen 80;

  server_name  www.friism.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 default_server ssl http2;
  server_name  www.friism.com;

  index index.php;
  root /var/www/html;

  ssl_certificate           /etc/letsencrypt/live/www.friism.com/fullchain.pem;
  ssl_certificate_key       /etc/letsencrypt/live/www.friism.com/privkey.pem;
  ssl_trusted_certificate   /etc/letsencrypt/live/www.friism.com/chain.pem;

  ssl_stapling              on;
  ssl_stapling_verify       on;
  resolver                  8.8.8.8 8.8.4.4;
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

  # Initialize the variable that specified to skip the cache
  set $skip_cache 0;

  # POST requests and url's with a query string should always skip cache
  if ($request_method = POST) {
      set $skip_cache 1;
  }
  if ($query_string != "") {
      set $skip_cache 1;
  }

  # Don't cache url's containing the following segments
  if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
      set $skip_cache 1;
  }

  # Don't use the cache for logged in users or recent commenters
  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
      set $skip_cache 1;
  }

  # LetsEncrypt challenge is served from volume
  location ^~ /.well-known {
      allow all;
      root  /data/letsencrypt/;
  }

  # Static files are served directly
  location / {
    try_files $uri $uri/ /index.php?$query_string;
    expires max;
  }

  # PHP stuff goes to wordpress over fastcgi
  location ~ \.php$ {
    fastcgi_pass wordpress;
    include fastcgi_params;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    fastcgi_intercept_errors on;

     # Don't cache when $skip_cache is true
    fastcgi_cache_bypass $skip_cache;
    fastcgi_no_cache $skip_cache;

    # Use the blog zone
    fastcgi_cache BLOG;
    
    # Cache everything for 1h
    fastcgi_cache_valid 1h;
  }
}
